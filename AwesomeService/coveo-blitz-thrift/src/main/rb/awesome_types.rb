#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module OrderingType
  ASCENDING = 1
  DESCENDING = 2
  VALUE_MAP = {1 => "ASCENDING", 2 => "DESCENDING"}
  VALID_VALUES = Set.new([ASCENDING, DESCENDING]).freeze
end

class DataPoint
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DIMENSIONS = 1
  METRICS = 2

  FIELDS = {
    DIMENSIONS => {:type => ::Thrift::Types::MAP, :name => 'dimensions', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    METRICS => {:type => ::Thrift::Types::MAP, :name => 'metrics', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::I64}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DimensionFilter
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DIMENSION = 1
  VALUE = 2

  FIELDS = {
    DIMENSION => {:type => ::Thrift::Types::STRING, :name => 'dimension'},
    VALUE => {:type => ::Thrift::Types::STRING, :name => 'value'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Response
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DATA = 1

  FIELDS = {
    DATA => {:type => ::Thrift::Types::LIST, :name => 'data', :element => {:type => ::Thrift::Types::STRUCT, :class => ::DataPoint}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Sort
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DIMENSION = 1
  METRIC = 2
  ORDERING = 3

  FIELDS = {
    DIMENSION => {:type => ::Thrift::Types::STRING, :name => 'dimension'},
    METRIC => {:type => ::Thrift::Types::STRING, :name => 'metric'},
    ORDERING => {:type => ::Thrift::Types::I32, :name => 'ordering', :enum_class => ::OrderingType}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @ordering.nil? || ::OrderingType::VALID_VALUES.include?(@ordering)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field ordering!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class Request
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DIMENSIONS = 1
  METRICS = 2
  FILTERS = 3
  SORTS = 4

  FIELDS = {
    DIMENSIONS => {:type => ::Thrift::Types::LIST, :name => 'dimensions', :element => {:type => ::Thrift::Types::STRING}},
    METRICS => {:type => ::Thrift::Types::LIST, :name => 'metrics', :element => {:type => ::Thrift::Types::STRING}},
    FILTERS => {:type => ::Thrift::Types::LIST, :name => 'filters', :element => {:type => ::Thrift::Types::STRUCT, :class => ::DimensionFilter}},
    SORTS => {:type => ::Thrift::Types::LIST, :name => 'sorts', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Sort}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

